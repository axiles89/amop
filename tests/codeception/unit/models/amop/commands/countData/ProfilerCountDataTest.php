<?php
/**
 * ProfilerCountDataTest.php
 *
 * @package tests\codeception\unit\models\amop\commands\countData
 * @date: 09.11.2015 19:57
 * @author: Kyshnerev Dmitriy <dimkysh@mail.ru>
 */

namespace tests\codeception\unit\models\amop\commands\countData;


use app\models\amop\commands\CountData;
use Codeception\Specify;
use tests\codeception\unit\DbTestCase;
use tests\codeception\unit\fixtures\models\amop\models\ProfilerFixture;

/**
 * Class ProfilerCountDataTest
 * @package tests\codeception\unit\models\amop\commands\countData
 */
class ProfilerCountDataTest extends DbTestCase
{
    use Specify;

    /**
     * Подключение нужных фикстур
     * @return array
     */
    public function fixtures()
    {
        return [
            'profiler' => ProfilerFixture::className(),
        ];
    }

    /**
     * @Override
     */
    protected function _before()
    {
        parent::_before(); // TODO: Change the autogenerated stub
    }

    /**
     * @Override
     */
    protected function _after()
    {
        parent::_after(); // TODO: Change the autogenerated stub
    }

    /**
     * Test getCount method
     */
    public function testGetCount() {

        $this->specifyConfig()
            ->cloneOnly('db', 'components');

        $fixtures = $this->getFixture('profiler');
        $model = $command = CountData::getModel(CountData::TYPE_PROFILER);

        $this->specify('test count not isset date', function() use ($fixtures, $model) {
            $result = [
                $fixtures->getModel('profiler1')->message_id => count($fixtures)
            ];

            $command = $model
                ->setData([
                    $fixtures->getModel('profiler1')->message_id => ''
                ])->getCount();

            $this->assertEquals($result, $command, "Test getCount broken. Command != result array.");
        });

        $this->specify('test count with date', function() use ($fixtures, $model) {
            $result = [];

            $command = $model
                ->setData([
                    $fixtures->getModel('profiler1')->message_id => $fixtures->getModel('profiler1')->date_create
                ])->getCount();

            $this->assertEquals($result, $command, "Test getCount broken. Command != result array.");
        });
    }

    /**
     * Test exception
     */
    public function testException() {
        $this->setExpectedException('InvalidArgumentException');
        $command = CountData::getModel(CountData::TYPE_PROFILER)
            ->setData(1)
            ->getCount();
    }
}